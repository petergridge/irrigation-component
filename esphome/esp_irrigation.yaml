# cd C:\Users\peter\AppData\Local\Programs\Python\Python38\Scripts
# esphome C:\Users\peter\Documents\esphome\esp_irrigation.yaml run

esphome:
  name: esp_irrigation
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ap
  password: !secret wifi_pw
  manual_ip:
    static_ip: 192.168.1.110
    gateway: 192.168.1.1
    subnet: 255.255.255.0

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

i2c:
  sda: D2
  scl: D1
  scan: True
  id: bus_a
  
pcf8574:
  - id: 'pcf8575_hub'
    address: 0x20
    pcf8575: True

binary_sensor:
- platform: status
  name: "ESP Irrigation Status"

sensor:
  - platform: adc
    pin: A0
    name: "Irrigation Moisture (Analog)"
    id: irrigation_moisture
    icon: mdi:water-percent
    unit_of_measurement: "%"
    update_interval: 60s
    filters:
    - lambda: return (1 - x) * 100;

  - platform: bme280
    temperature:
      name: "Irrigation Temperature"
      oversampling: 16x
    pressure:
      name: "Irrigation Pressure"
    humidity:
      name: "Irrigation Humidity"
    address: 0x76
    update_interval: 60s

# Individual outputs
switch:

  - platform: template
    name: "Solenoid 01"
    id: solenoid01
    icon: mdi:sprinkler
    turn_on_action:
    - switch.turn_on: relay01
    - delay: 30min
    - switch.turn_off: relay01
    turn_off_action:
    - switch.turn_off: relay01
    lambda: |-
      if (id(relay01).state) {
        return true;
      } else {
        return false;
      }

  - platform: template
    name: "Solenoid 02"
    id: solenoid02
    icon: mdi:sprinkler
    turn_on_action:
    - switch.turn_on: relay02
    - delay: 30min
    - switch.turn_off: relay02
    turn_off_action:
    - switch.turn_off: relay02
    lambda: |-
      if (id(relay02).state) {
        return true;
      } else {
        return false;
      }

  - platform: template
    name: "Solenoid 03"
    id: solenoid03
    icon: mdi:sprinkler
    turn_on_action:
    - switch.turn_on: relay03
    - delay: 30min
    - switch.turn_off: relay03
    turn_off_action:
    - switch.turn_off: relay03
    lambda: |-
      if (id(relay03).state) {
        return true;
      } else {
        return false;
      }

  - platform: template
    name: "Solenoid 04"
    id: solenoid04
    icon: mdi:sprinkler
    turn_on_action:
    - switch.turn_on: relay04
    - delay: 30min
    - switch.turn_off: relay04
    turn_off_action:
    - switch.turn_off: relay04
    lambda: |-
      if (id(relay04).state) {
        return true;
      } else {
        return false;
      }

  - platform: gpio
    name: "relay 01"
    id: relay01
    interlock: &interlock_group [relay01, relay02, relay03, relay04]
    pin:
      pcf8574: pcf8575_hub
      # Use pin number 0
      number: 0
      # One of INPUT, INPUT_PULLUP or OUTPUT
      mode: OUTPUT
      inverted: true
    restore_mode: ALWAYS_OFF
    internal: true

  - platform: gpio
    name: "relay 02"
    id: relay02
    interlock: *interlock_group
    pin:
      pcf8574: pcf8575_hub
      # Use pin number 1
      number: 1
      # One of INPUT, INPUT_PULLUP or OUTPUT
      mode: OUTPUT
      inverted: true
    restore_mode: ALWAYS_OFF 
    internal: true

  - platform: gpio
    name: "relay 03"
    id: relay03
    interlock: *interlock_group
    pin:
      pcf8574: pcf8575_hub
      # Use pin number 2
      number: 2
      # One of INPUT, INPUT_PULLUP or OUTPUT
      mode: OUTPUT
      inverted: true
    restore_mode: ALWAYS_OFF 
    internal: true

  - platform: gpio
    name: "relay 04"
    id: relay04
    interlock: *interlock_group
    pin:
      pcf8574: pcf8575_hub
      # Use pin number 14
      number: 14
      # One of INPUT, INPUT_PULLUP or OUTPUT
      mode: OUTPUT
      inverted: true
    restore_mode: ALWAYS_OFF 
    internal: true
